<?php

namespace AppBundle\Controller;

use AppBundle\Entity\user;
use AppBundle\Entity\image;

use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\Form\Extension\Core\Type\SubmitType;
use Symfony\Component\Form\Extension\Core\Type\PasswordType;
use Symfony\Component\Form\Extension\Core\Type\TelType;
use Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface;
use Symfony\Component\Form\Extension\Core\Type\RepeatedType;
use Symfony\Component\Form\Extension\Core\Type\FileType;
use Symfony\Component\HttpFoundation\File\File;

class ProfilController extends Controller
{
	private function generateUniqueFileName()
	{
		// md5() reduces the similarity of the file names generated by
		// uniqid(), which is based on timestamps
		return md5(uniqid());
	}
    /**
     * @Route("/profil/{url}", name="profil")
     */
    public function profileAction($url,Request $request)
    {
    	$usr= $this->getUser();
   		if(isset($usr)){
   			$repository = $this->getDoctrine()->getRepository('AppBundle:user');
        $rep2 = $this->getDoctrine()->getRepository('AppBundle:image');
		    $user = $repository->findOneByUsername($url);
        $img = $rep2->findByOwner($url);
			return $this->render('profil.html.twig',array('user'=>$user,'images'=>$img));
   		}else{
   			return $this->redirectToRoute('login');
   		}      
    }
    /**
     * @Route("/change_avatar", name="change_avatar")
     */
    public function change_avatarAction(Request $request)
    {
    	$usr= $this->getUser();
   		if(isset($usr)){
   			$repository = $this->getDoctrine()->getRepository('AppBundle:user');
			$user = $repository->findOneByUsername($usr->getUsername());
			$form = $this->createFormBuilder()
			->add('avatar', FileType::class)
			->add('Changer',SubmitType::class)
			->getForm();
			$form->handleRequest($request);
			if ($form->isSubmitted() && $form->isValid()){      
				$file =  $form['avatar']->getData();
	            $filename = $this->generateUniqueFileName().'.'.$file->guessExtension();
	            try
	            {
	              $file->move($this->getParameter('images_directory'),
	                          $filename);
	            }catch(FileException $e)
	            {

	            }
	            $user->setAvatar($filename);
	            $em = $this->getDoctrine()->getManager();
	            $em->persist($user);
	            $em->flush();
	           	return $this->render('profil.html.twig',array('user'=>$user));
        	}
			return $this->render('change.html.twig',array('form'=>$form->createView()));
   		}else{
   			return $this->redirectToRoute('login');
   		}      
    }
    /**
     * @Route("/change_psw", name="change_psw")
     */
    public function change_pswAction(Request $request,UserPasswordEncoderInterface $passwordEncoder)
    {
    	$usr= $this->getUser();
   		if(isset($usr)){
   			$repository = $this->getDoctrine()->getRepository('AppBundle:user');
			$user = $repository->findOneByUsername($usr->getUsername());
			$form = $this->createFormBuilder($user)
			->add('plainPassword', RepeatedType::class, [
                'type' => PasswordType::class,
                'first_options' => ['label' => 'Nouveau mot de passe '],
                'second_options' => ['label' => 'Confirmer le mot de passe '],
        	])
			->add('Changer',SubmitType::class)
			->getForm();
			$form->handleRequest($request);
			if ($form->isSubmitted() && $form->isValid()){ 
            	$password = $passwordEncoder->encodePassword($user, $user->getPlainPassword());
            	$user->setPassword($password);                     
	            $em = $this->getDoctrine()->getManager();
	            $em->persist($user);
	            $em->flush();
	           	return $this->render('profil.html.twig',array('user'=>$user));
        	}
			return $this->render('change.html.twig',array('form'=>$form->createView()));
   		}else{
   			return $this->redirectToRoute('login');
   		}      
    }
    /**
     * @Route("/change_tel", name="change_tel")
     */
    public function change_telAction(Request $request)
    {
    	$usr= $this->getUser();
   		if(isset($usr)){
   			$repository = $this->getDoctrine()->getRepository('AppBundle:user');
			$user = $repository->findOneByUsername($usr->getUsername());
			$form = $this->createFormBuilder()
			->add('tel',TelType::class, ['label'=>'TÃ©l '])
			->add('Changer',SubmitType::class)
			->getForm();
			$form->handleRequest($request);
			if ($form->isSubmitted() && $form->isValid()){ 
				$user->setTel($form['tel']->getData());                    
	            $em = $this->getDoctrine()->getManager();
	            $em->persist($user);
	            $em->flush();
	           	return $this->render('profil.html.twig',array('user'=>$user));
        	}
			return $this->render('change.html.twig',array('form'=>$form->createView()));
   		}else{
   			return $this->redirectToRoute('login');
   		}      
    }

}
